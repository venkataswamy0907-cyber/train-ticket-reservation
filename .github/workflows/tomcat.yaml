name: ci/cd pipeline to deploy to tomcat
on: 
  push:
    branches: master
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      
      - name: set-up jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'   # Updated Java version
      - name: Built with Maven
        run: mvn clean package -DskipTests
      - name: Find  WAR file 
        run: echo "WAR_FILE=$(ls target?*.war | head -n 1)" >>$GITHUB_ENV
      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: war-file
          path: ${{ env.WAR_FILE }}
          
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@4
        with:
          name: war-file

          
      - name: Deploy to DEV
        env:
          URL: ${{ secrets.TOMCAT_URL_DEV }}
          USER: ${{ secrets.TOMCAT_USER_DEV }}
          PASS: ${{ secrets.TOMCAT_PASS_DEV }}
        run: |
          WAR_FILE=$(ls *.war | head -n 1)
          echo "Deploying $WAR_FILE to DEV ($URL)"
          curl -v -u "$USER:$PASS" "$URL/list"
          curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
            "$URL/deploy?path=/train-ticket-reservation&update=true"

            
  deploy-test:
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@4
        with:
          name: war-file

          
      - name: Deploy to DEV
        env:
          URL: ${{ secrets.TOMCAT_URL_TEST }}
          USER: ${{ secrets.TOMCAT_USER_TEST }}
          PASS: ${{ secrets.TOMCAT_PASS_TEST }}
        run: |
          WAR_FILE=$(ls *.war | head -n 1)
          echo "Deploying $WAR_FILE to TEST ($URL)"
          curl -v -u "$USER:$PASS" "$URL/list"
          curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
            "$URL/deploy?path=/train-ticket-reservation&update=true"       

  deploy-prepod:
     needs: deploy-test
     runs-on: ubuntu-latest
     steps:
       - uses: actions/download-artifact@4
         with:
           name: war-file

          
       - name: Deploy to prepod
         env:
           URL: ${{ secrets.TOMCAT_URL_PRE_POD }}
           USER: ${{ secrets.TOMCAT_USER_PRE_POD }}
           PASS: ${{ secrets.TOMCAT_PASS_PRE_POD }}
         run: |
           WAR_FILE=$(ls *.war | head -n 1)
           echo "Deploying $WAR_FILE to PRE-POD ($URL)"
           curl -v -u "$USER:$PASS" "$URL/list"
           curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
             "$URL/deploy?path=/train-ticket-reservation&update=true"                
  deploy-prod:
     needs: deploy-prepod
     runs-on: ubuntu-latest
     steps:
       - uses: actions/download-artifact@4
         with:
           name: war-file

          
       - name: Deploy to prod
         env:
           URL: ${{ secrets.TOMCAT_URL_POD }}
           USER: ${{ secrets.TOMCAT_USER_POD }}
           PASS: ${{ secrets.TOMCAT_PASS_POD }}
         run: |
           WAR_FILE=$(ls *.war | head -n 1)
           echo "Deploying $WAR_FILE to -POD ($URL)"
           curl -v -u "$USER:$PASS" "$URL/list"
           curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
             "$URL/deploy?path=/train-ticket-reservation&update=true"                
      
    
